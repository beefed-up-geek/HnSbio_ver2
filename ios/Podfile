platform :ios, '15.0'
# 전역 modular_headers!는 쓰지 않음
use_frameworks! :linkage => :dynamic

require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

target 'sanhak_2' do
  config = use_native_modules!

  # Firebase 관련 Pods (모듈 헤더 지정 없이도 됨)
  pod 'Firebase/Core'
  pod 'Firebase/Auth'
  pod 'Firebase/Database'

  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :hermes_enabled => true,
  )

  post_install do |installer|
    react_native_post_install(installer)

    # 필요 시 ReactCommon.modulemap을 지워야 할 수도 있음
    system("rm -f Pods/Headers/Public/ReactCommon/ReactCommon.modulemap")

    installer.pods_project.targets.each do |target|
      # react-native-video만 특정
      if target.name == 'react-native-video'
        target.build_configurations.each do |config|
          other_ldflags = config.build_settings['OTHER_LDFLAGS'] || ['$(inherited)']
  
          # 1) -ObjC 플래그 추가
          unless other_ldflags.include?('-ObjC')
            other_ldflags << '-ObjC'
          end
  
          # 2) -force_load 로 라이브러리 경로를 강제 로드할 수도 있음
          # (라이브러리 경로는 프로젝트 구성에 따라 다를 수 있음)
          # unless other_ldflags.any? { |f| f.include?('-force_load') }
          #   other_ldflags << '-force_load Pods/Pods.build/Debug-iphonesimulator/React-Core/libReact-Core.a'
          # end
  
          config.build_settings['OTHER_LDFLAGS'] = other_ldflags
        end
      end
    end
  end
end
